% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mqtt_topic_subscribe.R
\name{mqtt_topic_subscribe}
\alias{mqtt_topic_subscribe}
\title{Subscribes to mqtt topics}
\usage{
mqtt_topic_subscribe(
  topic,
  intern = F,
  host = "localhost",
  port = NULL,
  num.messages = 0,
  timeout = 0,
  qos = 0,
  verbose = F,
  append.eol = T,
  enable.debugging = F,
  clientid = NULL,
  keepalive = 60
)
}
\arguments{
\item{topic}{character string, mqtt topic to subscribe to.}

\item{intern}{logical (not NA), indicates whether to capture the output as an R character vector. Defaults to FALSE.}

\item{host}{character string,  mqtt host to connect to. Defaults to localhost.}

\item{port}{integer, connect to the specified port. Default NULL denotes 1883 for plain MQTT or 8883 for MQTT
over TLS.}

\item{num.messages}{non negative integer, disconnect and exit the program immediately after the given count of
messages have been received. Defaults to 0, means it continues to collect messages until
stopped using Ctrl + C.}

\item{timeout}{non negative integer, specifies a timeout in seconds how long to process incoming MQTT messages.
Defaults to 0, means no timeout.}

\item{qos}{integer : 0 or 1 or 2, quality of service level to use for the subscription. Defaults to 0.}

\item{verbose}{logical (not NA), print received messages verbosely. With this argument, messages will be printed as
"topic payload". When this argument is not given, the messages are printed as "payload". Default
is FALSE.}

\item{append.eol}{logical (not NA), whether to add an end of line character when printing / capturing ( see intern )
the payload. Defaults to TRUE.}

\item{enable.debugging}{logical (not NA), whether debug messages should be enabled. Default is FALSE.}

\item{clientid}{character string, id to use for this client. Defaults to NULL, means mosquitto_sub_ appended with
the process id of the client.}

\item{keepalive}{positive integer, umber of seconds between sending PING commands to the broker for the purposes of
informing it we are still connected and functioning. Defaults to 60 seconds.}
}
\description{
The function \code{mqtt_topic_subscribe} subscribes to mqtt topics
}
\details{
If both num.messages and timeout is supplied, disconnection happens whichever condition is fulfilled first.
append.eol allows streaming of payload data from multiple messages directly to another application unmodified.
Only really makes sense when not using verbose.
}
\examples{

\donttest{
mqtt_topic_subscribe( topic = 'magicblock/demo_user/temperature2', host = 'test.mosquitto.org' )
}

#.... Stores output as R character vector. Turning it off, just prints the output to console ....

\donttest{
mqtt_topic_subscribe( topic = 'magicblock/demo_user/temperature2', intern = T,
host = 'test.mosquitto.org' )
}

#.... Disconnects after receiving 5 messages ....

\donttest{
mqtt_topic_subscribe( topic = 'magicblock/demo_user/temperature2', host = 'test.mosquitto.org',
 num.messages = 5 )
}

#.... Disconnects after 6 seconds of starting connection with broker, also showing verbose ....

\donttest{
mqtt_topic_subscribe( topic = 'magicblock/demo_user/temperature2', host = 'test.mosquitto.org',
 timeout = 6, verbose = T )
}

#.... End of line character is not added after messages are received ....

\donttest{
mqtt_topic_subscribe( topic = 'magicblock/demo_user/temperature2', host = 'test.mosquitto.org',
 num.messages = 5, append.eol = F )
}

#.... Enabling debug messages .....
\donttest{
mqtt_topic_subscribe( topic = 'magicblock/demo_user/temperature2', host = 'test.mosquitto.org',
 num.messages = 5, enable.debugging = T )
}

}
